@model IEnumerable<SistemasAnaliticos.DTO.CardsDTO>

<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Bootstrap Icons -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css">
    <style>

        .bg-gradient-custom {
            background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
        }

        .btn-custom-primary {
            background-color: #012473;
            border-color: #012473;
            color: white;
        }

            .btn-custom-primary:hover {
                background-color: #013599;
                border-color: #013599;
                color: white;
            }

        .search-icon {
            position: absolute;
            left: 12px;
            top: 50%;
            transform: translateY(-50%);
            z-index: 10;
        }

        .card-employee {
            border-radius: 12px;
            border: none;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
            transition: all 0.3s ease;
            margin-bottom: 1.5rem;
            overflow: hidden;
        }

            .card-employee:hover {
                transform: translateY(-5px);
                box-shadow: 0 8px 20px rgba(0, 0, 0, 0.12);
            }

        .card-employee-header {
            color: white;
            position: relative;
        }

        .employee-avatar {
            width: 180px;
            height: 180px;
            
            object-fit: cover;
        }

        .employee-name {
            font-size: 1.25rem;
            font-weight: 600;
            margin-top: 0.8rem;
            margin-bottom: 0.8rem;
            font-weight: 700;
            color: black;
        }

        .employee-tags {
            display: flex;
            gap: 0.5rem; /* espacio entre las burbujas */
            flex-wrap: wrap; /* por si se hace muy pequeño el contenedor */
            align-items: center;
            justify-content: center;
        }

        .employee-tag {
            background-color: rgba(1, 36, 115, 0.1);
            font-size: 0.9rem;
            color: black;
            margin: 0;
            padding: 4px 10px;
            border-radius: 20px; /* forma de burbuja */
            display: inline-block;
            font-weight: 500;
        }

        .card-employee-body {
            padding: 1.5rem 1.5rem 0 1.5rem;
        }

        .employee-info-item {
            display: flex;
            align-items: flex-start;
            margin-bottom: 0.75rem;
        }

        .employee-info-text {
            font-size: 0.9rem;
            color: var(--dark-color);
        }

        .employee-status {
            display: inline-block;
            padding: 0.35rem 0.75rem;
            border-radius: 20px;
            font-size: 0.8rem;
            font-weight: 500;
            width: 100px;

            display: flex;
            justify-content: center;
            align-items: center;
            margin: 0 auto;
        }

        .status-active {
            background-color: #198754;
            color: #99f6e4;
        }

        .status-vacations {
            background-color: rgba(247, 37, 133, 0.15);
            color: #f72585;
        }

        .search-container {
            position: relative;
            max-width: 400px;
        }

        .search-input {
            padding-left: 40px;
            border-radius: 30px;
            border: 1px solid #dee2e6;
        }

        .header-card {
            border-radius: 12px;
            border: none;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
            background-color: white;
        }

        .employees-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
            gap: 1.5rem;
        }

        .card-employee-footer {
            padding: 1rem 1.5rem;
        }

        /* Contenedor principal del footer */
        .footer-actions {
            display: flex;
            width: 100%;
        }

        /* Cada “slot” de botón ocupa el mismo espacio */
        .footer-slot-details {
            flex: 2;
            display: flex;
            justify-content: center;
            align-items: center;
        }

        .footer-slot-edit {
            flex: 2;
            display: flex;
            justify-content: center;
            align-items: center;
        }

        .footer-slot-delete {
            flex: 2;
            display: flex;
            justify-content: center;
            align-items: center;
        }

        /* Botones (ya definidos por ti, aquí solo aseguramos consistencia visual) */
        .action-btn {
            border: none;
            background: transparent;
            color: #6c757d;
            padding: 0.5rem;
            border-radius: 50%;
            transition: all 0.2s ease;
            display: flex;
            align-items: center;
            justify-content: center;
        }

            .action-btn:hover {
                background-color: rgba(108, 117, 125, 0.1);
                color: var(--dark-color);
            }

        .btn-details {
            color: #64B5F6;
        }

        .btn-edit {
            color: #ffc107;
        }

        .btn-delete {
            color: #dc3545;
        }
    </style>

    <!-- ESTILOS DEL MODAL -->
    <style>
        :root {
            --primary-color: #012473;
            --secondary-color: #013599;
            --danger-color: #E00319;
            --success-color: #198754;
        }

        .modal-xl-custom {
            max-width: 1000px;
        }

        .stepper-sidebar {
            background: linear-gradient(to bottom, var(--primary-color), var(--secondary-color));
            color: white;
            min-height: 600px;
        }

        .step-item {
            transition: all 0.3s ease;
            cursor: pointer;
        }

            .step-item:hover {
                background-color: rgba(255, 255, 255, 0.1);
            }

            .step-item.active {
                background-color: rgba(255, 255, 255, 0.2);
                box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
            }

            .step-item.completed {
                background-color: rgba(255, 255, 255, 0.1);
            }

        .step-icon {
            width: 48px;
            height: 48px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            flex-shrink: 0;
        }

            .step-icon.active {
                background-color: white;
                color: var(--primary-color);
                box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
            }

            .step-icon.completed {
                background-color: var(--success-color);
                color: white;
            }

            .step-icon.inactive {
                background-color: rgba(255, 255, 255, 0.2);
                color: white;
            }

        .step-title {
            font-weight: 600;
            font-size: 0.9rem;
        }

        .step-description {
            font-size: 0.8rem;
            color: rgba(255, 255, 255, 0.8);
        }

        .required-field::after {
            content: " *";
            color: var(--danger-color);
        }

        .section-title {
            color: var(--primary-color);
            font-weight: 700;
            margin-bottom: 0.5rem;
        }

        .section-subtitle {
            color: #6c757d;
            margin-bottom: 1.5rem;
        }

        .form-label {
            font-weight: 600;
            font-size: 0.9rem;
            margin-bottom: 0.5rem;
        }

        .emergency-contact-header {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            margin-bottom: 1rem;
        }

        .emergency-icon {
            width: 32px;
            height: 32px;
            border-radius: 50%;
            background-color: var(--danger-color);
            color: white;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 0.9rem;
        }

        .currency-input {
            position: relative;
        }

            .currency-input .input-group-text {
                background-color: #e9ecef;
                border-right: none;
            }

            .currency-input .form-control {
                border-left: none;
            }

        .btn-primary-custom {
            background-color: var(--primary-color);
            border-color: var(--primary-color);
        }

            .btn-primary-custom:hover {
                background-color: var(--secondary-color);
                border-color: var(--secondary-color);
            }

        .btn-success-custom {
            background-color: var(--success-color);
            border-color: var(--success-color);
        }

        .modal-content {
            border-radius: 12px;
            overflow: hidden;
        }

        .modal-body {
            padding: 0;
        }

        /* NUEVO ESTILO: Contenedor principal con flexbox */
        .form-container {
            display: flex;
            flex-direction: column;
            height: 100%; /* Altura fija del modal */
        }

        .form-content {
            flex: 1;
            overflow-y: auto;
            padding: 2rem;
        }

        .modal-footer-custom {
            background-color: #f8f9fa;
            border-top: 1px solid #dee2e6;
            padding: 1rem 2rem;
            margin-top: auto; /* Empuja los botones hacia abajo */
        }
    </style>
</head>
<body class="bg-gradient-custom min-vh-100">

    <!-- Main Content -->
    <main class="container-xxl px-4 px-sm-6 px-lg-8 py-4">

        <!-- Header -->
        <div class="header-card p-4 mt-4">
            <h1 class="h2 fw-bold text-gray-900 mb-2">Gestión de Empleados</h1>
            <p class="text-muted">Administra la información de todos los @* <span id="employeeCount">@Model.Count</span> *@ empleados de la empresa</p>
        </div>

        <!-- Actions Bar -->
        <div class="header-card p-4 mt-4 mb-5">
            <div class="card-body">
                <div class="row g-3 align-items-center">
                    <div class="col-md-6 col-lg-8">
                        <div class="position-relative">
                            <i class="bi bi-search text-muted search-icon"></i>
                            <input type="text"
                                   class="form-control ps-5"
                                   id="searchInput"
                                   placeholder="Buscar por nombre, departamento o puesto...">
                        </div>
                    </div>
                    <div class="col-md-6 col-lg-4">
                        <div class="d-flex gap-2">
                            <button class="btn btn-outline-secondary d-flex align-items-center">
                                <i class="bi bi-funnel me-2"></i>
                                Filtrar
                            </button>
                            <button class="btn btn-primary-custom text-white d-flex align-items-center"
                                    data-bs-toggle="modal"
                                    data-bs-target="#createEmployeeModal">
                                <i class="bi bi-plus me-2"></i>
                                Nuevo Empleado
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Employees Cards -->
        <div id="employeesCards" class="employees-grid">
            @foreach (var empleado in Model)
            {
                <div class="card card-employee">
                    <div class="card-employee-header text-center">
                        <div class="position-relative d-inline-block w-100" style="background-color: rgba(1, 36, 115, 0.1)">
                            @if (empleado.Foto != null && empleado.Foto.Length > 0)
                            {
                                <img src="data:image/jpeg;base64,@Convert.ToBase64String(empleado.Foto)"
                                     alt="foto de Empleado"
                                     class="employee-avatar"
                                     style="cursor: pointer;"
                                     data-bs-toggle="modal"
                                     data-bs-target="#fotoModal"
                                     onclick="mostrarImagenModal('@Convert.ToBase64String(empleado.Foto)')">
                            }
                            else
                            {
                                <img src="/Img/sin foto.png"
                                     alt="foto de Empleado"
                                     class="employee-avatar">
                            }
                        </div>
                        <h5 class="employee-name">@empleado.Nombre</h5>
                        <div class="employee-tags">
                            <p class="employee-tag">@empleado.Puesto</p>
                            <p class="employee-tag">@empleado.Departamento</p>
                        </div>
                    </div>
                    <div class="card-employee-body">
                        <div class="employee-info-item">
                            <div class="employee-info-text">
                                <strong>Correo Empresarial:</strong><br>
                                @empleado.CorreoEmp
                            </div>
                        </div>
                        <div class="employee-info-item">
                            <div class="employee-info-text">
                                <strong>Teléfono Empresarial:</strong><br>
                                @empleado.TelefonoEmp
                            </div>
                        </div>
                        <div class="employee-info-item">
                            <div class="employee-info-text">
                                <strong>Correo Personal:</strong><br>
                                @empleado.CorreoPerso
                            </div>
                        </div>
                        <div class="employee-info-item">
                            <div class="employee-info-text">
                                <strong>Teléfono Personal:</strong><br>
                                @empleado.TelefonoPerso
                            </div>
                        </div>
                    </div>
                    <div class="card-employee-footer">
                        <div class="footer-actions">
                            <div class="footer-slot-details">
                                <button class="action-btn btn-details" title="Detalles" data-id="@empleado.Id">
                                    <i class="bi bi-file-text"></i>
                                </button>
                            </div>
                            <div class="footer-slot-edit">
                                <button class="action-btn btn-edit" title="Editar" data-id="@empleado.Id">
                                    <i class="bi bi-pencil"></i>
                                </button>
                            </div>
                            <div class="footer-slot-delete">
                                <button class="action-btn btn-delete" title="Eliminar" data-id="@empleado.Id">
                                    <i class="bi bi-trash"></i>
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>

        <div id="noResults" class="text-center py-5 d-none">
            <div class="mb-4">
                <i class="bi bi-search display-1 text-muted"></i>
            </div>
            <h4 class="text-muted">No se encontraron empleados</h4>
            <p class="text-muted">Intenta con otros términos de búsqueda</p>
        </div>
    </main>

    <!-- Modal de Registro -->
    @Html.Partial("modalRegistro", new SistemasAnaliticos.Entidades.Usuario())

    <!-- SCRIPT DE LA API DE LA UBICACION -->
    <script src='~/JS/overpassAPI.js'></script>

    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

    <script>
        // Función para generar avatar de fallback
        function getAvatarFallback(name) {
            return name.split(' ').map(n => n[0]).join('');
        }

        // Función para filtrar empleados en el cliente (búsqueda en tiempo real)
        function filterEmployees(searchTerm) {
            const cards = document.querySelectorAll('.card-employee');
            let visibleCount = 0;

            cards.forEach(card => {
                const employeeName = card.querySelector('.employee-name').textContent.toLowerCase();
                const position = card.querySelector('.employee-tag:nth-child(1)').textContent.toLowerCase();
                const department = card.querySelector('.employee-tag:nth-child(2)').textContent.toLowerCase();

                const matches = employeeName.includes(searchTerm) ||
                               position.includes(searchTerm) ||
                               department.includes(searchTerm);

                card.style.display = matches ? 'block' : 'none';
                if (matches) visibleCount++;
            });

            // Mostrar/ocultar mensaje de no resultados
            const noResults = document.getElementById('noResults');
            const employeeCount = document.getElementById('employeeCount');

            employeeCount.textContent = visibleCount;

            if (visibleCount === 0) {
                noResults.classList.remove('d-none');
            } else {
                noResults.classList.add('d-none');
            }
        }

        // Inicializar la página
        document.addEventListener('DOMContentLoaded', function() {
            // Configurar búsqueda en tiempo real
            const searchInput = document.getElementById('searchInput');
            searchInput.addEventListener('input', function(e) {
                filterEmployees(e.target.value.toLowerCase());
            });

            // Configurar eventos de los botones de acción
            document.addEventListener('click', function(e) {
                if (e.target.closest('.btn-details')) {
                    const button = e.target.closest('.btn-details');
                    const employeeId = button.getAttribute('data-id');
                    alert(`Ver detalles del empleado con ID: ${employeeId}`);
                    // Aquí puedes redirigir a la página de detalles o abrir un modal
                }

                if (e.target.closest('.btn-edit')) {
                    const button = e.target.closest('.btn-edit');
                    const employeeId = button.getAttribute('data-id');
                    alert(`Editar empleado con ID: ${employeeId}`);
                    // Aquí puedes redirigir a la página de edición o abrir un modal
                }

                if (e.target.closest('.btn-delete')) {
                    const button = e.target.closest('.btn-delete');
                    const employeeId = button.getAttribute('data-id');
                    const employeeName = button.closest('.card-employee').querySelector('.employee-name').textContent;

                    if (confirm(`¿Estás seguro de que quieres eliminar a ${employeeName}?`)) {
                        // Aquí puedes hacer una llamada AJAX para eliminar el empleado
                        alert(`Empleado ${employeeName} eliminado (ID: ${employeeId})`);
                    }
                }
            });
        });
    </script>
</body>
</html>